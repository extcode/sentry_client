# cat=Sentry/; type=text; label=DSN: http://public_key@your-sentry-server.com/project-id, you can also use the SENTRY_DSN environment variable
dsn =
# cat=Sentry/; type=options[none,userid,usernameandemail]; label=Report user information
reportUserInformation = userid
# cat=Sentry/; type=text; label=Exception/LogWriter message blacklist regex: Use it to not report them. Example: /an exception message/
messageBlacklistRegex =
# cat=Sentry/; type=boolean; label=Report database connection errors: Such service outages should better be handled by a monitoring system
reportDatabaseConnectionErrors = 0
# cat=Sentry/; type=string; label=Release: See https://docs.sentry.io/error-reporting/configuration/?platform=php#release, you can also use the SENTRY_RELEASE environment variable
release =
# cat=Sentry/; type=options[,null,0,1,2]; label=IP Mask: See https://docs.typo3.org/c/typo3/cms-core/main/en-us/Changelog/7.6.x/Feature-84053-APIToAnonymizeIPAddresses.html, you can also use the SENTRY_IP_MASK environment variable
ip_mask = 0
# cat=Sentry/; type=boolean; label=Show Event id
showEventId = 1
# cat=Sentry/; type=options[,warning,error]; label=LogWriter level: The LogWriter reports errors which are normally just logged. This is an experimental feature.
logWriterLogLevel =
# cat=Sentry/; type=array; label=LogWriter component blacklist: Comma separated list of LogRecord components which should not be reported. Example: TYPO3.CMS.Frontend.Controller.NoisyController
logWriterComponentBlacklist =
